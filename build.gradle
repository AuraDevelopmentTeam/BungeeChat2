/*plugins {
    id "me.champeau.gradle.jmh" version "0.4.4"
}

jmh {
    iterations = 10
    benchmarkMode = ["sample"]
    fork = 2
    resultFormat = "JSON"
    threads = Runtime.getRuntime().availableProcessors() / 2
    timeUnit = "ms"
    warmupIterations = 10
    jmhVersion = "1.19"
}

task generateBenchmarkReport(type: Zip, dependsOn: jmh) {
    from file("${buildDir}/reports/jmh/results.json")
    archiveName "${project.name}-BenchmarkReport.zip"
    destinationDir rootProject.projectDir

    //jmh.finalizedBy generateBenchmarkReport
} */

apply from: "GradleCommon/common.gradle"

repositories {
    maven {
        name "AuraDevelopmentTeam"
        url "https://maven.jnc.world"
    }
    maven {
        name "jitpack.io"
        url "https://jitpack.io"
    }
    maven {
        name "luck-repo"
        url "https://repo.lucko.me/"
    }
}

dependencies {
    shadow (project(":BungeeChatApi")) {
        exclude module: "lombok"
    }
    
    compile "net.alpenblock:BungeePerms:${bungeeperms_version}"
    compile "com.github.CheeseSoftware:PowerfulPermsAPI:${powerfulperms_version}"
    compile "me.lucko.luckperms:luckperms-api:${luckperms_version}"
    
    shadowRelocate "com.typesafe:config:${hocon_version}"
    
    testCompile "commons-io:commons-io:2.5"
    testRuntime "mysql:mysql-connector-java:6.0.6"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.4
            }
        }
    }
}
