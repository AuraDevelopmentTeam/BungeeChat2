import static com.xlson.groovycsv.CsvParser.parseCsv

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.xlson.groovycsv:groovycsv:1.2"
    }
}

apply plugin: "jacoco"

apply from: "GradleCommon/common.gradle"

repositories {
    maven {
        name "jitpack.io"
        url "https://jitpack.io"
    }
    maven {
        name "luck-repo"
        url "https://repo.lucko.me/"
    }
}

dependencies {
    shadow (project(":BungeeChatApi")) {
        transitive = false
    }
    
    compile "net.alpenblock:BungeePerms:${bungeeperms_version}"
    compile "com.github.CheeseSoftware:PowerfulPermsAPI:${powerfulperms_version}"
    compile "me.lucko.luckperms:luckperms-api:${luckperms_version}"
}

task printCoverage(dependsOn: jacocoTestCoverageVerification) {
    doLast {
        def instructions = [0, 0]
        def branches = [0, 0]
        def lines = [0, 0]
        def complexity = [0, 0]
        def methods = [0, 0]
    
        for(line in parseCsv(new FileReader(file("${buildDir}/reports/jacoco/test/jacocoTestReport.csv")))) {
            instructions[0] += Integer.parseInt(line.INSTRUCTION_MISSED) + Integer.parseInt(line.INSTRUCTION_COVERED)
            instructions[1] += Integer.parseInt(line.INSTRUCTION_COVERED)
        }
        
        println String.format("Covered %.1f%% of instructions.", ((double)instructions[1] / (double)instructions[0]) * 100.0) 
    }
} 

test.finalizedBy jacocoTestReport
jacocoTestReport.finalizedBy jacocoTestCoverageVerification
jacocoTestCoverageVerification.finalizedBy printCoverage

jacocoTestReport {
    reports {
        csv.enabled true
    }
}
