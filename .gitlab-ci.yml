variables:
  GIT_SUBMODULE_STRATEGY: recursive
  ORIG_ARTIFACTS: "$CI_PROJECT_DIR/**/build/libs/*.jar*"
  ARTIFACTS: "$CI_PROJECT_DIR/*.jar*"
  TEST_REPORTS: "$CI_PROJECT_DIR/*-TestReport.zip"
  COVERAGE_REPORTS: "$CI_PROJECT_DIR/*-CoverageReport.zip"
  JAVADOCS: "$CI_PROJECT_DIR/*-javadoc.jar"
  GRADLE_OPTS: >
    -Dorg.gradle.project.signing.keyId="$keyId"
    -Dorg.gradle.project.signing.password="$password"
    -Dorg.gradle.project.signing.secretKeyRingFile="$secretKeyRingFile"
    -Dorg.gradle.project.branchName="$CI_COMMIT_REF_NAME"

cache:
  key: "$CI_COMMIT_REF_NAME/$CI_COMMIT_SHA"
  untracked: true

before_script:
  - shopt -s globstar
  - shopt -s nullglob

stages:
- build
- test
- deploy

build:
  stage: build
  script:
  - ./gradlew --console=plain assemble
  - cp $ORIG_ARTIFACTS .
  when: on_success
  artifacts:
    paths:
    - $ARTIFACTS

test:
  stage: test
  script:
  - ./gradlew --continue --console=plain test
  when: on_success
  artifacts:
    when: always
    paths:
    - $TEST_REPORTS

coverage:
  stage: test
  script:
  - ./gradlew --continue --console=plain coverage
  coverage: "/Covered (\\d{1,3}\\.\\d{2}%) of instructions for all projects\\./"
  allow_failure: true
  when: on_success
  artifacts:
    when: always
    paths:
    - $COVERAGE_REPORTS

deploy:
  stage: deploy
  script:
  - ./gradlew --console=plain uploadArchives
  when: always
  only:
  - tags

pages:
  stage: deploy
  dependencies:
  - build
  - test
  - coverage
  script:
  - for file in $JAVADOCS; do dir=public/javadoc/$(basename $file | cut -d- -f1); mkdir -p $dir; unzip $file -d $dir; done
  - for file in $TEST_REPORTS; do dir=public/test/$(basename $file | cut -d- -f1); mkdir -p $dir; unzip $file -d $dir; done
  - for file in $COVERAGE_REPORTS; do dir=public/coverage/$(basename $file | cut -d- -f1); mkdir -p $dir; unzip $file -d $dir; done
  when: always
  artifacts:
    paths:
    - public
